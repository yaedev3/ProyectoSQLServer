<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonSupplierSeek.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        V8BJAAAAAElFTkSuQmCC
</value>
  </data>
</root>